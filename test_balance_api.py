#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –Ω–æ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –ø–æ–ª—É—á–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ —á–µ—Ä–µ–∑ Polymarket Data API
"""

import asyncio
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from src.polymarket_client import PolymarketClient
from loguru import logger

async def test_new_balance_functionality():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –ø–æ–ª—É—á–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞"""
    logger.info("üß™ –ù–∞—á–∏–Ω–∞–µ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –±–∞–ª–∞–Ω—Å–∞")
    
    try:
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç
        client = PolymarketClient()
        
        if not client.account:
            logger.error("‚ùå –ê–∫–∫–∞—É–Ω—Ç –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ PRIVATE_KEY")
            return
            
        logger.info(f"‚úÖ –ö–ª–∏–µ–Ω—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –¥–ª—è –∞–¥—Ä–µ—Å–∞: {client.get_address()}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å—Ç–∞—Ä—ã–π –º–µ—Ç–æ–¥
        logger.info("\nüìä –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—â–µ–≥–æ –º–µ—Ç–æ–¥–∞ get_account_balance():")
        balance = client.get_account_balance()
        if balance is not None:
            logger.info(f"‚úÖ –ë–∞–ª–∞–Ω—Å –ø–æ–ª—É—á–µ–Ω: ${balance:.6f}")
        else:
            logger.warning("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –±–∞–ª–∞–Ω—Å")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–æ–≤—ã–µ –º–µ—Ç–æ–¥—ã –æ—Ç–¥–µ–ª—å–Ω–æ
        user_address = client.get_address()
        if client.config.polymarket.POLYMARKET_PROXY_ADDRESS:
            user_address = client.config.polymarket.POLYMARKET_PROXY_ADDRESS
            
        if not user_address:
            logger.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∞–¥—Ä–µ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
            return
            
        logger.info(f"\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö API –º–µ—Ç–æ–¥–æ–≤ –¥–ª—è –∞–¥—Ä–µ—Å–∞: {user_address}")
        
        # –¢–µ—Å—Ç 1: –°—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ–∑–∏—Ü–∏–π
        logger.info("\nüìà –¢–µ—Å—Ç 1: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –ø–æ–∑–∏—Ü–∏–π —á–µ—Ä–µ–∑ /value API")
        positions_value = client._get_positions_value(user_address)
        if positions_value is not None:
            logger.info(f"‚úÖ –°—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ–∑–∏—Ü–∏–π: ${positions_value:.6f}")
        else:
            logger.info("‚ÑπÔ∏è –°—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ–∑–∏—Ü–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –∏–ª–∏ —Ä–∞–≤–Ω–∞ 0")
            
        # –¢–µ—Å—Ç 2: –°–≤–æ–±–æ–¥–Ω—ã–π USDC —á–µ—Ä–µ–∑ proxy wallet
        logger.info("\nüí∞ –¢–µ—Å—Ç 2: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ USDC —á–µ—Ä–µ–∑ proxy wallet")
        proxy_wallet, free_usdc = client._get_free_usdc_balance(user_address)
        if proxy_wallet:
            logger.info(f"üè¶ –ù–∞–π–¥–µ–Ω proxy wallet: {proxy_wallet}")
        if free_usdc is not None:
            logger.info(f"üíµ –°–≤–æ–±–æ–¥–Ω—ã–π USDC: ${free_usdc:.6f}")
        else:
            logger.info("‚ÑπÔ∏è –°–≤–æ–±–æ–¥–Ω—ã–π USDC –Ω–µ –Ω–∞–π–¥–µ–Ω")
            
        # –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ RPC –¥–ª—è proxy wallet
        if proxy_wallet:
            logger.info(f"\nüåê –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ USDC –±–∞–ª–∞–Ω—Å–∞ —á–µ—Ä–µ–∑ RPC –¥–ª—è proxy wallet: {proxy_wallet}")
            rpc_balance = client._check_usdc_balance_for_address(proxy_wallet)
            if rpc_balance is not None and rpc_balance > 0:
                logger.info(f"‚úÖ RPC –±–∞–ª–∞–Ω—Å: ${rpc_balance:.6f}")
            else:
                logger.info("‚ÑπÔ∏è RPC –±–∞–ª–∞–Ω—Å –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ —Ä–∞–≤–µ–Ω 0")
        
        # –ò—Ç–æ–≥–æ–≤–∞—è —Å–≤–æ–¥–∫–∞
        logger.info("\nüìã –ò—Ç–æ–≥–æ–≤–∞—è —Å–≤–æ–¥–∫–∞:")
        total_value = 0.0
        if positions_value:
            total_value += positions_value
            logger.info(f"  üìä –°—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ–∑–∏—Ü–∏–π: ${positions_value:.6f}")
        if free_usdc:
            total_value += free_usdc
            logger.info(f"  üíµ –°–≤–æ–±–æ–¥–Ω—ã–π USDC: ${free_usdc:.6f}")
        if total_value > 0:
            logger.info(f"  üí∞ –û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: ${total_value:.6f}")
        else:
            logger.info("  ‚ö†Ô∏è –ë–∞–ª–∞–Ω—Å –Ω–µ –Ω–∞–π–¥–µ–Ω - –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è fallback")
            
        logger.info("‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ")
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        raise

if __name__ == "__main__":
    asyncio.run(test_new_balance_functionality()) 