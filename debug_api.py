import requests
import json
from loguru import logger

# === –ö–æ–Ω—Ñ–∏–≥ ===
API_URL = "https://gamma-api.polymarket.com/markets"

def debug_api_response():
    """–î–∏–∞–≥–Ω–æ—Å—Ç–∏—Ä—É–µ—Ç –æ—Ç–≤–µ—Ç API –¥–ª—è –≤—ã—è—Å–Ω–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã —Å –ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã–º–∏ —Ä—ã–Ω–∫–∞–º–∏"""
    
    params = {
        'active': True,
        'limit': 5,
        'order': 'startDate',
        'ascending': False
    }
    
    try:
        logger.info("üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ API –æ—Ç–≤–µ—Ç–∞...")
        response = requests.get(API_URL, params=params, timeout=10)
        response.raise_for_status()
        markets = response.json()
        
        logger.info(f"üìä –ü–æ–ª—É—á–µ–Ω–æ {len(markets)} —Ä—ã–Ω–∫–æ–≤ –∏–∑ API")
        
        for i, market in enumerate(markets):
            logger.info(f"\n=== –†—ã–Ω–æ–∫ {i+1} ===")
            logger.info(f"ID: {market.get('id')}")
            logger.info(f"Question: {market.get('question')}")
            logger.info(f"Slug: {market.get('slug')}")
            logger.info(f"Active: {market.get('active')}")
            logger.info(f"EnableOrderBook: {market.get('enableOrderBook')}")
            logger.info(f"CreatedAt: {market.get('createdAt')}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è
            market_id = market.get('id')
            question = market.get('question')
            slug = market.get('slug')
            
            missing_fields = []
            if not market_id:
                missing_fields.append('id')
            if not question:
                missing_fields.append('question')
            if not slug:
                missing_fields.append('slug')
            
            if missing_fields:
                logger.warning(f"‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è: {missing_fields}")
            else:
                logger.info("‚úÖ –í—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∏–ª—å—Ç—Ä "Up or Down"
            question_text = question or ""
            skip_prefixes = [
                "Bitcoin Up or Down",
                "Ethereum Up or Down", 
                "Solana Up or Down",
                "XRP Up or Down"
            ]
            
            if any(question_text.startswith(prefix) for prefix in skip_prefixes):
                logger.warning(f"‚ö†Ô∏è –†—ã–Ω–æ–∫ –±—É–¥–µ—Ç –ø—Ä–æ–ø—É—â–µ–Ω (Up or Down): {question_text}")
            else:
                logger.info("‚úÖ –†—ã–Ω–æ–∫ –Ω–µ –ø–æ–ø–∞–¥–∞–µ—Ç –ø–æ–¥ —Ñ–∏–ª—å—Ç—Ä Up or Down")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª–Ω—ã–π JSON –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ —Ä—ã–Ω–∫–∞
        if markets:
            logger.info(f"\nüìã –ü–æ–ª–Ω—ã–π JSON –ø–µ—Ä–≤–æ–≥–æ —Ä—ã–Ω–∫–∞:")
            logger.info(json.dumps(markets[0], indent=2, ensure_ascii=False))
            
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ API: {e}")

if __name__ == "__main__":
    debug_api_response() 